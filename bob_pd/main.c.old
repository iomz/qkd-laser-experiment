#include "rs232.h"

#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>

#define NBITS 20 

typedef unsigned short bool;
#define true 1
#define false 0

/*
#define RESET &=~
#define SET   |=
#define TOGGLE ^= 
*/

ISR(ADC_vect){ // ADC complete interrupt
  tx_1byte_USART(ADCH);
  tx_string_USART("\n\r");
  _delay_ms(500);
}

/*
ISR(TIMER0_COMPA_vect){ // Timer0 overflow interrupt
  if(bit_is_clear(ADCSRA, ADSC))
    ADCSRA |= _BV(ADSC);
  else
    ADCSRA &= ~(_BV(ADSC));
}

void timer_init(void){
  TCCR0A = _BV(WGM01);  // CTC mode
  TCCR0B = _BV(CS02) | _BV(CS00); // Prescaler 1024
  OCR0A  = 249; // 8MHz / (1024*(1+249)) = 31.25
  TIMSK0 = _BV(OCIE0A); // ISR COMPA vect
}
*/

void adc_init(void){
  // AVcc ref, use ADC5
  ADMUX = _BV(REFS0) | _BV(ADLAR) | _BV(MUX2) | _BV(MUX0);

  // Free-running, enable ADC and interrupt, prescaler div factor 64
  ADCSRA = _BV(ADEN) | _BV(ADATE) | _BV(ADIE) | _BV(ADPS2) | _BV(ADPS1);
}

/* main */
int main(void){
  USART_init(UBRR);
  //timer_init();
  adc_init();

  sei(); // Enable Global Interrupts
 
  ADCSRA |= _BV(ADSC);
  while(true){
    tx_1byte_USART(rx_1byte_USART());
  }
  return 0;
}
